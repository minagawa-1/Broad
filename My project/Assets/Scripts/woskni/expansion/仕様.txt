ChangeActiveSelection.cs
{
	カンマ(,)キーで選択しているオブジェクトのアクティブ/非アクティブを切り替えます。
}

ChangeProjCons.cs
{
	Ctrl+Shift+Cでコンソールウィンドウ(デバッグログウィンドウ)を表示します。
	プロジェクトウィンドウ等と併設されている場合は表示切り替えを行います。
}

DebugHotKey.cs
{
	エディタの再生やリロードのショートカットをF5キーに設定しています。

	PlayEditor:
		F5キーの押し込みに反応してシーンを再生します。
		再生中の場合はシーンの再生成を行います。

	StopEditor:
		再生中にCtrl+F5の検知でシーンの再生を終了します。

	PauseEditor:
		再生中にShift+F5の検知でシーンの再生を一時停止します。
}

Grouping.cs
{
	選択中のGameObjectを新規生成した親オブジェクトに格納してグループ化します。
	Ctrl+Gで呼び出し可能です。

	Grouping:
		グルーピング用のウィンドウに設定された名前のGameObjectを新規生成して、選択中のGameObjectのparent情報を新規GameObjectに設定します。
		Canvas内のGameObject(UIオブジェクト)を選択している場合は、新規GameObjectのtransformをRectTransformに切り替えます。

	グルーピング用のウィンドウ:
		グループ化する際の新規GameObjectの名前(グループ名)を設定するウィンドウです。
		また、選択中のGameObjectが0件の場合は警告を、1件以上の場合は選択しているオブジェクト数を表示します。
}

MultiSelecter.cs
{
	複数選択をより容易にすることを目的としたスクリプトです。

	GUIUpdate:
		ヒエラルキーウィンドウの右端にOnGUI処理を行います
	
	OnGUI:
		GameObjectの選択状態を格納したトグル(チェックボックス)を追加します。
		トグルを押すことでGameObjectの選択状態が切り替わり、CtrlやShiftで複数選択する面倒を軽減します。
}

Name.cs
{
	変数やプロパティをインスペクタで表示する際の表示名を変更します。
	たとえば、[SerializeField, Name("データのID")] int m_DataID = 0; といった変数を宣言したとき、インスペクタ画面では変数名が Data ID ではなく データのID と表示されます。

	これにより、より可読性の高いスクリプト作成を実現します。
}

ReadOnly.cs
{
	インスペクタで表示はするものの、値の変更は不可能にしたい際にこれを入れることで実現します。
	たとえば、[SerializeField, ReadOnly] int m_DataID = 0; といった変数を宣言したとき、スクリプトの内部では値の変更がされますがインスペクタからは値の変更ができなくなります。
	また、インスペクタ上の変数値の背景色が暗くなり、変更が不可能・非推奨であることを明示します。
}

RenameSelection.cs
{
	選択中のGameObjectの名称を一括で置換します。
	使用頻度の低さからホットキーは設定しておりません。

	Rename:
		リネーム用のウィンドウに設定された置換前文字列・置換後文字列にあわせて、選択中のすべてのGameObjectの名前を置換します。
		もし置換前文字列が空白だった場合は、名前の先頭に置換後文字列を挿入します。

	リネーム用のウィンドウ:
		置換の対象となる置換前文字列と、置換前文字列に置き換える置換後文字列を設定します。
}

RenderingMode.cs
{
	GetBlend:
		第一引数マテリアルのブレンドモードを変更したマテリアルを返します。
		種類は第二引数で選択します。Opaque, CutOut, Fade, Transparent の四種です。
}